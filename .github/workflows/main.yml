name: Main Foodgram Workflow

on:
  push:
    branches:
      - main

jobs:
  tests:
    # Разворачиваем окружение:
    runs-on: ubuntu-latest
    
    services:
      postgres:  # Контейнер с PostgreSQL
        image: postgres:13.10  # Версия как в вашем docker-compose.production.yml
        env:
          POSTGRES_USER: postgres  # Учетные данные для тестов
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    # Копируем код проекта
    - name: Check out code
      uses: actions/checkout@v3
    # Устанавливаем Python с помощью action
    - name: Set up Python

      uses: actions/setup-python@v4
    # В action setup-python@v4 передаём параметр — версию Python
      with:
        python-version: 3.12
    # Обновляем pip, устанавливаем flake8 и flake8-isort, 
    # устанавливаем зависимости проекта
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools==65.5.0
        pip install flake8==6.1.0 flake8-isort==5.0.0  # Совместимая версия
        pip install -r requirements.txt
    - name: Run isort check
      run: python -m isort --check-only backend/
    # Запускаем flake8
    - name: Test with flake8 and django tests
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      # Вызываем flake8 и указываем ему,
      # что нужно проверить файлы только в папке backend/
      run: |
        FLAKE8_IGNORE=flake8-isort python -m flake8 backend/
        cd backend/
        python manage.py test
