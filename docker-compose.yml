volumes:
  pg_data:
  static:
  media:

services:
  db:
    image: postgres:13.10
    #container_name: db  # Явное указание имени контейнера
    #hostname: db
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
 
  backend:
    build: ./backend/
    env_file: .env
    volumes:
      #- ./backend/data:/app/data
      - static:/backend_static
      - media:/app/media
    depends_on:
      - db
        #condition: service_healthy
    #command: >
      #sh -c "python manage.py wait_for_db &&
             #python manage.py migrate &&
             #python manage.py import_json /app/data/ingredients.json &&
             #gunicorn --bind 0.0.0.0:8800 backend.wsgi"
      
  frontend:
    env_file: .env
    build: ./frontend/
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static:/frontend_static

  gateway:
    build: ./gateway/
    env_file: .env
    depends_on:
      - backend
    volumes:
      - static:/staticfiles
      - media:/media
    ports:
      - 8800:80
